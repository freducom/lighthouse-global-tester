name: Bi-Hourly Lighthouse Tests

on:
  schedule:
    # Run every 2 hours (12 times per day, 84 times per week)
    - cron: '0 */2 * * *'
  workflow_dispatch:  # Allow manual triggering
    inputs:
      test_all:
        description: 'Test all websites (ignore rotation)'
        required: false
        default: false
        type: boolean
  push:
    branches: [ main ]

# Add permissions for GitHub token
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  lighthouse-tests:
    runs-on: ubuntu-latest
    
    # Add environment for GitHub Pages deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    # Add concurrency to prevent multiple runs
    concurrency:
      group: lighthouse-tests
      cancel-in-progress: true
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install Chrome dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Setup database
        run: |
          node migrate-db.js
          echo "Database initialized and migrated"

      - name: Run Lighthouse tests for daily batch
        continue-on-error: true
        id: lighthouse-tests
        run: |
          if [ "${{ github.event.inputs.test_all }}" = "true" ]; then
            echo "üåç Manual trigger: Testing all websites across all countries..."
            node global-tester.js --now
          else
            # Calculate bi-hourly batch index (0-83 for 84 batches per week)
            # Day of week (0=Sunday, 1=Monday, ..., 6=Saturday) and hour of day (0-23)
            DAY_OF_WEEK=$(date +%w)
            HOUR_OF_DAY=$(date +%H)
            # Remove leading zeros to prevent octal interpretation
            HOUR_OF_DAY=$((10#$HOUR_OF_DAY))
            DAY_OF_WEEK=$((10#$DAY_OF_WEEK))
            # Convert to 2-hour slots: 0-1=0, 2-3=1, 4-5=2, etc. (12 slots per day)
            HOUR_SLOT=$((HOUR_OF_DAY / 2))
            # Calculate batch index: day * 12 + hour_slot (0-83)
            BATCH_INDEX=$((DAY_OF_WEEK * 12 + HOUR_SLOT))
            echo "üìÖ Day $DAY_OF_WEEK, Hour $HOUR_OF_DAY (slot $HOUR_SLOT) = Batch $BATCH_INDEX/84"
            echo "üéØ Running bi-hourly batch testing (1/84th of websites)..."
            node global-tester.js --hourly-batch $BATCH_INDEX
          fi
          echo "‚úÖ Lighthouse testing completed for today's batch"

      - name: Check lighthouse test results
        run: |
          if [ "${{ steps.lighthouse-tests.outcome }}" = "success" ]; then
            echo "üéâ All lighthouse tests completed successfully"
          elif [ "${{ steps.lighthouse-tests.outcome }}" = "failure" ]; then
            echo "‚ö†Ô∏è Some lighthouse tests failed, but continuing with available data"
            echo "üìä Checking if database was updated with partial results..."
            if [ -f "lighthouse_scores.db" ]; then
              echo "‚úÖ Database file exists - partial results may be available"
            else
              echo "‚ùå No database file found"
            fi
          else
            echo "‚ùì Lighthouse tests had unexpected outcome: ${{ steps.lighthouse-tests.outcome }}"
          fi

      - name: Commit updated database
        run: |
          echo "Checking for database changes..."
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if database file has changes
          if git diff --quiet lighthouse_scores.db; then
            echo "üìä No database changes detected"
          else
            echo "üíæ Database has been updated with new lighthouse scores"
            
            # Add and commit the updated database
            git add lighthouse_scores.db
            
            # Create commit message with test summary
            if [ "${{ github.event.inputs.test_all }}" = "true" ]; then
              COMMIT_MSG="Update database: Full lighthouse test results ($(date '+%Y-%m-%d %H:%M UTC'))"
            else
              DAY_OF_WEEK=$(date +%w)
              HOUR_OF_DAY=$(date +%H)
              # Remove leading zeros to prevent octal interpretation
              HOUR_OF_DAY=$((10#$HOUR_OF_DAY))
              DAY_OF_WEEK=$((10#$DAY_OF_WEEK))
              HOUR_SLOT=$((HOUR_OF_DAY / 2))
              BATCH_INDEX=$((DAY_OF_WEEK * 12 + HOUR_SLOT))
              COMMIT_MSG="Update database: Bi-hourly batch $((BATCH_INDEX + 1))/84 lighthouse results ($(date '+%Y-%m-%d %H:%M UTC'))"
            fi
            
            git commit -m "$COMMIT_MSG"
            
            echo "üì§ Pushing updated database to main branch..."
            git push
            
            echo "‚úÖ Database successfully updated and pushed to main branch"
          fi

      - name: Generate website
        run: |
          echo "Generating static website with latest test results..."
          if node generate-website.js; then
            echo "‚úÖ Website generation completed successfully"
          else
            echo "‚ö†Ô∏è Website generation encountered errors, but continuing deployment"
            echo "üìÅ Checking if website files were created..."
            if [ -d "website" ] && [ "$(ls -A website)" ]; then
              echo "‚úÖ Website directory exists with files - proceeding with deployment"
            else
              echo "‚ùå No website files found - creating basic error page"
              mkdir -p website
              cat > website/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Lighthouse Global Tester</title>
            <style>
              body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
              .error { color: #e74c3c; }
              .info { color: #3498db; }
            </style>
          </head>
          <body>
            <h1>üåç Global Lighthouse Tracker</h1>
            <div class="error">
              <h2>‚ö†Ô∏è Website Generation Error</h2>
              <p>The website could not be generated due to testing issues.</p>
            </div>
            <div class="info">
              <p>Testing is ongoing - please check back later.</p>
              <p>Last update attempt: $(date)</p>
            </div>
          </body>
          </html>
          EOF
              echo "‚úÖ Created fallback error page"
            fi
          fi

      - name: Upload website artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-website
          path: website/

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
        
      - name: Upload website artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./website
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Generate test summary
        run: |
          echo "## üöÄ Daily Lighthouse Testing Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Testing Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.test_all }}" = "true" ]; then
            echo "**Mode:** Manual full testing (all websites)" >> $GITHUB_STEP_SUMMARY
            echo "**Websites Tested:** All websites across all countries" >> $GITHUB_STEP_SUMMARY
          else
            DAY_OF_WEEK=$(date +%w)
            HOUR_OF_DAY=$(date +%H)
            # Remove leading zeros to prevent octal interpretation
            HOUR_OF_DAY=$((10#$HOUR_OF_DAY))
            DAY_OF_WEEK=$((10#$DAY_OF_WEEK))
            HOUR_SLOT=$((HOUR_OF_DAY / 2))
            BATCH_INDEX=$((DAY_OF_WEEK * 12 + HOUR_SLOT))
            DAY_NAME=$(date +%A)
            echo "**Mode:** Bi-hourly batch testing (Batch $((BATCH_INDEX + 1))/84)" >> $GITHUB_STEP_SUMMARY
            echo "**Time Slot:** $DAY_NAME, $(printf '%02d' $((HOUR_SLOT * 2)))-$(printf '%02d' $((HOUR_SLOT * 2 + 1))) UTC" >> $GITHUB_STEP_SUMMARY
            echo "**Batch Size:** Approximately 1/84th of total websites" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "**Countries Available:** US, UK, Germany, India, Brazil, Japan, Canada, Australia, Russia, South Korea, Finland, Israel, Netherlands, Sweden" >> $GITHUB_STEP_SUMMARY
          echo "**Database:** Updated with latest performance scores" >> $GITHUB_STEP_SUMMARY
          echo "**Website:** Deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
          
          # Count successful tests from database
          TOTAL_TESTS=$(node -e "
            const Database = require('./database.js');
            const db = new Database();
            const scores = db.getAllLatestScores();
            console.log(scores.length);
          ")
          
          echo "**Total Historical Tests:** $TOTAL_TESTS" >> $GITHUB_STEP_SUMMARY
          echo "**Testing Schedule:** Every 2 hours (84 batches per week)" >> $GITHUB_STEP_SUMMARY
          echo "**Live Dashboard:** [View Performance Results](https://$(echo $GITHUB_REPOSITORY | sed 's/\//.github.io\//')/)" >> $GITHUB_STEP_SUMMARY